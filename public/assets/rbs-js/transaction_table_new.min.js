
/* 
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */


/* 
 Created on : Apr 28, 2023, 8:24:42 AM
 Author     : Sampath Perera
 */

var table = undefined;
var TRANSACTION_DATA_CHOOSER_VISIBLE = false;
var COLUMN_ID = 0;
var SELECTED_ROW = undefined;
var SELECTED_COLUMN_ID = 0;
var ROW_COLOR = "#4b98cf";
$(document).ready(function () {
    (function ($) {
        table = $.fn.transactionTable = function (property) {
            var is_init = false;
            const COLUMNS = property.columns;
            const AUTO_FOCUS = property.auto_focus;
            const HIDDEN_COL = property.hidden_col;
            const transaction_table = this[0];
            const transaction_table_id = transaction_table.id;
            var ROW_ID = 0;
            var COMPULSORY_TEXT = [];


            this.clear = function () {
                $('#' + transaction_table_id + ' > tbody').empty();
            };

            this.appendRow = function (row) {
                var row_column = '<tr id="' + transaction_table_id + ROW_ID + '">';
                for (var i = 0; i < row.length; i++) {
                    var value = "";
                    if (row[i].value) value = row[i].value;

                    var class_name = "";
                    if (row[i].class) class_name = row[i].class;

                    var style = "font-weight:700;";
                    if (row[i].style) style += row[i].style;

                    var event = "";
                    if (row[i].event) event = row[i].event;

                    var width = '*';
                    if (row[i].width) width = row[i].width + "px";

                    if (width == '*') width = "100%";

                    var name = '';
                    if (row[i].name) name = row[i].name;

                    if (row[i].type == 'label') {
                        row_column += '<td style="max-width:' + width + ';padding-left:0px;padding-right:0px;"><label class="' + class_name + '" style="' + style + '" onclick="' + event + '" data-id ="' + row[i].data_id + '">' + value + '</label></td>';
                        COLUMN_ID++;
                    }

                    if (row[i].type == 'text') {

                        var valuefrom = "";
                        if (row[i].valuefrom == "datachooser") {
                            valuefrom = row[i].valuefrom;
                        }

                        var thousand_seperator = "";
                        if (row[i].thousand_seperator) {
                            thousand_seperator = row[i].thousand_seperator;
                        }


                        if (row[i].compulsory) {
                            row_column += '<td style="max-width:' + width + ';padding-left:0px;padding-right:0px;"><input name="' + name + '" type="text" class="' + class_name + '" value="' + value + '" style="' + style + '" onfocus="' + event + '" onclick="' + event + ';showTransactionDataChooserEventListener(this);selectedColumn(' + COLUMN_ID + ');" oninput="' + event + ';thousand_separator(this,' + thousand_seperator + ');dataid_clear(this);" data-id ="' + row[i].data_id + '" ' + row[i].disabled + ' compulsory="true" value-from="' + valuefrom + '"></td>';
                        } else {
                            row_column += '<td style="max-width:' + width + ';padding-left:0px;padding-right:0px;"><input name="' + name + '" type="text" class="' + class_name + '" value="' + value + '" style="' + style + '" onfocus="' + event + '" onclick="' + event + ';showTransactionDataChooserEventListener(this);selectedColumn(' + COLUMN_ID + ');" oninput="' + event + ';thousand_separator(this,' + thousand_seperator + ');dataid_clear(this);" data-id ="' + row[i].data_id + '" ' + row[i].disabled + ' value-from="' + valuefrom + '"></td>';
                        }
                        COLUMN_ID++;
                    }


                    if (row[i].type == 'number') {

                        var valuefrom = "";
                        if (row[i].valuefrom == "datachooser") {
                            valuefrom = row[i].valuefrom;
                        }

                        var thousand_seperator = "";
                        if (row[i].thousand_seperator) {
                            thousand_seperator = row[i].thousand_seperator;
                        }


                        if (row[i].compulsory) {
                            row_column += '<td style="max-width:' + width + ';padding-left:0px;padding-right:0px;"><input name="' + name + '" type="number" class="' + class_name + '" value="' + value + '" style="' + style + '" onfocus="' + event + '" onclick="' + event + ';showTransactionDataChooserEventListener(this);selectedColumn(' + COLUMN_ID + ');" oninput="' + event + ';thousand_separator(this,' + thousand_seperator + ');dataid_clear(this);" data-id ="' + row[i].data_id + '" ' + row[i].disabled + ' compulsory="true" value-from="' + valuefrom + '"></td>';
                        } else {
                            row_column += '<td style="max-width:' + width + ';padding-left:0px;padding-right:0px;"><input name="' + name + '" type="number" class="' + class_name + '" value="' + value + '" style="' + style + '" onfocus="' + event + '" onclick="' + event + ';showTransactionDataChooserEventListener(this);selectedColumn(' + COLUMN_ID + ');" oninput="' + event + ';thousand_separator(this,' + thousand_seperator + ');dataid_clear(this);" data-id ="' + row[i].data_id + '" ' + row[i].disabled + ' value-from="' + valuefrom + '"></td>';
                        }
                        COLUMN_ID++;
                    }

                    if (row[i].type == 'button') {

                        row_column += '<td style="max-width:' + width + ';padding-left:0px;padding-right:0px;"><button type="button" class="' + class_name + '" style="' + style + '" onclick="' + event + ';transactionTableButtonListener(event);" onfocus="' + event + ';transactionTableButtonListener(event);" data-id ="' + row[i].data_id + '">' + value + '</button></td>';
                        COLUMN_ID++;
                    }

                    if (row[i].type == 'select') {

                        var select_options = '';
                        if (row[i].selected_option) {
                            select_options += '<option value="' + value[(row[i].selected_option - 1)].value + '">' + value[(row[i].selected_option - 1)].text + '</option>';
                        }
                        for (var i2 = 0; i2 < value.length; i2++) {
                            if ((i2 + 1) != row[i].selected_option) {
                                select_options += '<option value="' + value[i2].value + '">' + value[i2].text + '</option>';
                            }
                        }
                        row_column += '<td  style="max-width:' + width + ';padding-left:0px;padding-right:0px;"><select class="' + class_name + '" style="' + style + '" onchange="' + event + '" data-id ="' + row[i].data_id + '">' + select_options + '</select></td>';
                        COLUMN_ID++;
                    }

                }
                row_column += '</tr>';
                this.append(row_column);



                $('#' + transaction_table_id + ROW_ID).keydown(function (e) {
                    if (e.keyCode == 13) {
                        transactionTableKeyEnterEvent(e, transaction_table_id);
                    }
                });

                if (is_init) {
                    $($('#' + transaction_table_id + ROW_ID)[0].cells[AUTO_FOCUS].childNodes[0]).focus();
                } else {
                    is_init = true;
                }



                ROW_ID++;


                for (var i = 0; i < HIDDEN_COL.length; i++) {
                    $('#' + transaction_table_id + ' tr').find("td:eq(" + HIDDEN_COL[i] + "), th:eq(" + HIDDEN_COL[i] + ")").hide();
                }


                $('.math-abs').on('input', function () {
                    var inputValue = $(this).val();
                    var filteredValue = inputValue.replace(/-/g, ''); // Remove all '-' characters
                    $(this).val(filteredValue);
                });

                $('.math-round').on('input', function () {
                    var inputValue = $(this).val();
                    $(this).val(Math.trunc(inputValue));
                });
            };

            this.addRow = function () {
                var objects = this.getDataSourceObject();
                var tr = $(objects[objects.length - 1]);
                for (var i = 0; i < tr.length; i++) {

                    if ($(tr[i]).attr('compulsory')) {
                        if (($(tr[i]).val().length == 0)) {
                            $(tr[i]).focus();
                            return;
                        } else {
                            //$(tr[i]).prop("disabled", true)
                        }

                    }

                    if ($(tr[i]).attr('value-from') == "datachooser") {
                        if (($(tr[i]).attr('data-id') == "undefined")) {
                            $(tr[i]).focus();
                            return;
                        } else {
                            //$(tr[i]).prop("disabled", true)
                        }
                    }
                }

                this.appendRow(COLUMNS);

                var objects2 = this.getDataSourceObject();
                var tr2 = $(objects2[objects2.length - 1]);
                for (var i = 0; i < tr2.length; i++) {

                    if ($(tr2[i]).attr('value-from') == "datachooser") {
                        $(tr2[i]).trigger('click');
                        break;
                    }
                }

            };

            this.getDataSource = function () {

                var dataCollection = [];
                var table = document.getElementById(transaction_table_id),
                    rows = table.getElementsByTagName('tr'),
                    i, j, cells, id;

                for (i = 0, j = rows.length; i < j; ++i) {
                    cells = rows[i].getElementsByTagName('td');
                    if (!cells.length) {
                        continue;
                    }


                    var data = [];
                    for (i2 = 0; i2 < cells.length; i2++) {

                        /*var data = {
                            "value": cells[i2].childNodes[0],
                        };*/
                        var type = cells[i2].childNodes[0].nodeName;
                        if (type == 'LABEL') {
                            data.push(cells[i2].childNodes[0].innerText);
                        } else if (type == 'INPUT') {
                            data.push(cells[i2].childNodes[0].value);
                        } else if (type == 'SELECT') {
                            data.push(cells[i2].childNodes[0].value);
                        } else if (type == 'BUTTON') {
                            data.push(cells[i2].childNodes[0].innerText);
                        }

                    }
                    dataCollection.push(data);



                }

                return dataCollection;
            };


            this.getDataSourceObject = function () {

                var objectCollection = [];
                var table = document.getElementById(transaction_table_id),
                    rows = table.getElementsByTagName('tr'),
                    i, j, cells, id;

                for (i = 0, j = rows.length; i < j; ++i) {
                    cells = rows[i].getElementsByTagName('td');
                    if (!cells.length) {
                        continue;
                    }


                    var data = [];
                    for (i2 = 0; i2 < cells.length; i2++) {


                        var object = $(cells[i2].childNodes[0]);
                        data.push(object);

                    }
                    objectCollection.push(data);



                }

                return objectCollection;
            };
            this.setDataSource = function (data) {
                this.clear();
                is_init = false;
                for (var i = 0; i < data.length; i++) {
                    this.appendRow(data[i]);
                }

            };


            return this;
        };


    })(jQuery);



    setSelectedRow();



});


function setSelectedRow() {
    var rows = document.getElementById('tblData').children[1].children;
    var selectedRow = 0;
    document.body.onkeydown = function (e) {
        //Prevent page scrolling on keypress
        // e.preventDefault();
        //Clear out old row's color
        rows[selectedRow].style.backgroundColor = "#FFFFFF";
        //Calculate new row
        if (e.keyCode == 38) {
            selectedRow--;

        } else if (e.keyCode == 40) {
            selectedRow++;
        }
        if (selectedRow >= rows.length) {
            selectedRow = 0;
        } else if (selectedRow < 0) {
            selectedRow = rows.length - 1;

        }
        //Set new row's color
        rows[selectedRow].style.backgroundColor = ROW_COLOR;

        if (e.keyCode == 38 || e.keyCode == 40) {
            var cells = $(rows[selectedRow]).find('td');
            cells.each(function (index) {
                if (index == 0) {
                    $($(this).children()[0]).focus();
                    console.log($(this).children()[0]);
                    return;
                }

            });

        }


    };
    //Set the first row to selected color
    rows[0].style.backgroundColor = ROW_COLOR;



}


function transactionTableKeyEnterEvent(event, id) {


}

function removeRow(event) {
    if ($(event).text() == 'Remove') {
        var id = $($($(event).closest("tr").parent()).parent()).attr('id');
        var row_count = $('#' + id + ' tr').length - 1;
        if (row_count > 1) {
            $(event).closest("tr").remove();
            setSelectedRow();
        }
    }
}


function thousand_separator(event, bool) {

    if (bool) {
        $(event).focusout(function () {
            if ($.isNumeric($(event).val())) {
                var number = parseFloat($(event).val());
                var str_number = number.toLocaleString('en-US', { minimumFractionDigits: 2, maximumFractionDigits: 2, }).toString();
                $(this).val(str_number);
            }
        });
    }
}


function dataid_clear(event) {
    $(event).attr('data-id', "undefined");
}


function transactionTableButtonListener(name) {


}



function showTransactionDataChooserEventListener(event) {

    if ($(event).attr('value-from') == "datachooser") {
        showTransactionDataChooser(event, TRANSACTION_DATA_CHOOSER_VISIBLE);
    }
    TRANSACTION_DATA_CHOOSER_VISIBLE = true;
}


function selectedColumn(id) {

    SELECTED_COLUMN_ID = id;


}










